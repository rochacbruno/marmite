name: GH Pages Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4

      - name: check formatting
        run: cargo fmt -- --check

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Clippy
        # Relaxed on clippy requirement, will run it manually from time to time.
        # run: cargo clippy -- -W clippy::pedantic
        run: cargo clippy

      - name: Build 🔧
        run: cargo build --release

      - name: Add paths
        run: echo "::add-path::$GITHUB_WORKSPACE/target/release"

      - name: Prepare site 🏗️
        run: |
          cp -R example marmitesite
          cp README.md marmitesite/content/docs.md
          rm marmitesite/marmite.yaml
          cp .github/marmite.yaml marmitesite/marmite.yaml

      - name: Build site 🏗️
        run: marmite marmitesite site --debug

      - name: Setup Pages
        if: github.event_name == 'push'
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: github.event_name == 'push'
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'

      - name: Deploy to GitHub Pages
        if: github.event_name == 'push'
        id: deployment
        uses: actions/deploy-pages@v4

